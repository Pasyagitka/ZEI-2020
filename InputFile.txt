symbolic func  	 foo(symbolic str,tiny k,tiny m)
[
show("symblen")!
set tiny p    : symblen(str)!
show(str)!
giveback str!
]
tiny func  	 boo()
[
show("boo function")!	~комментарий
giveback 29!
]
perform 
[
set tiny x : m100! 
show(x)!
set tiny y!
y : x / 2!
y: 1 + genertiny() + 2!
show(y)!
set tiny a : x+y    + 22h!
show(a)!
set symbolic 	str: "sp ace"!
show(str)!
set symbolic  mystr : "а бв?гдежзикла	мопростуфхцч"!
set symbolic w : gettime(str)!
show(w)!
set logical mb : true!
set logical k!
set logical mbd : generlgcl()!
show(mb)!
set tiny convert : 2 + symbtotiny(str) +1!
show(convert)!
when(mb ^ false) 
[
a: 19+1!
show(a)!
]
otherwise 
[
show(str)!
]
set tiny fef :  (x -12)	# (a +y)!
loop(fef=5)
[
 fef : fef+1!
]
show(fef)!
]